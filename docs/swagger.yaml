basePath: /
definitions:
  req.ChangePasswordReq:
    properties:
      new_pwd:
        type: string
      old_pwd:
        type: string
    required:
      - new_pwd
      - old_pwd
    type: object
  req.CreateUserReq:
    properties:
      email:
        type: string
      full_name:
        type: string
      password:
        type: string
      phone:
        type: string
    required:
      - email
      - full_name
      - password
    type: object
  req.ForgotPasswordReq:
    properties:
      email:
        type: string
    required:
      - email
    type: object
  req.LoginUserReq:
    properties:
      email:
        type: string
      password:
        type: string
    required:
      - email
      - password
    type: object
  res.ErrorResponse:
    properties:
      error_key:
        type: string
      log:
        type: string
      message:
        type: string
      status_code:
        type: integer
    type: object
  res.SuccessResponse:
    properties:
      data: { }
      message:
        type: string
      status_code:
        type: integer
    type: object
host: localhost:8888
info:
  contact:
    email: support@trekkstay.com
    name: Trekkstay Team
    url: https://www.trekkstay.com
  description: API system for Trekkstay - Hotel Booking System
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://swagger.io/
  title: Trekkstay API - V1
  version: v1.0
paths:
  /api/v1/user/change-password:
    post:
      description: Change password
      parameters:
        - description: ChangePasswordReq JSON
          in: body
          name: ChangePasswordReq
          required: true
          schema:
            $ref: '#/definitions/req.ChangePasswordReq'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/res.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/res.ErrorResponse'
      security:
        - jwt: [ ]
      summary: Change password
      tags:
        - User
  /api/v1/user/forgot-password:
    post:
      description: Forgot password and send new password to email
      parameters:
        - description: ForgotPasswordReq JSON
          in: body
          name: ForgotPasswordReq
          required: true
          schema:
            $ref: '#/definitions/req.ForgotPasswordReq'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/res.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/res.ErrorResponse'
      summary: Forgot password
      tags:
        - User
  /api/v1/user/login:
    post:
      description: Login user by email and password
      parameters:
        - description: LoginUserReq JSON
          in: body
          name: LoginUserReq
          required: true
          schema:
            $ref: '#/definitions/req.LoginUserReq'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/res.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/res.ErrorResponse'
      summary: Login user
      tags:
        - User
  /api/v1/user/signup:
    post:
      description: Register new user
      parameters:
        - description: CreateUserReq JSON
          in: body
          name: CreateUserReq
          required: true
          schema:
            $ref: '#/definitions/req.CreateUserReq'
      produces:
        - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/res.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/res.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/res.ErrorResponse'
      summary: Register new user
      tags:
        - User
securityDefinitions:
  JWT:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
